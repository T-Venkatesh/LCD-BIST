

`timescale 1ns / 1ps
 
module bist(
    input clk,
    input [15:0] sw,
    output [15:0]led
    );
 //Slower clock
 parameter delay = 10;
 reg sclk = 0;
 integer count = 0;
 
 always@(posedge clk) begin
  if(count < delay) 
     count <= count + 1;
   else begin
    sclk <= ~sclk;
    count <= 0;
   end  
 end
 
 ///to identify whether user has pressed switch
 reg flag=0;
 
 always@(posedge sclk) begin
  if(sw == 16'h0000)
     flag <= 0;
  else
    flag <= 1;
 end
    
 ////Output decoding process 2
 reg [15:0] temp=0;
 integer cnt = 0;
 always@(posedge sclk) begin
 case(flag) 
   0: begin
     if(cnt <= 15) begin
      temp <= {1'b1,temp[15:1]};
      cnt <= cnt + 1;
     end
     else if (cnt == 16) begin
       cnt <= cnt + 1;
       temp <= 0;
     end
      else if (cnt > 16 && cnt <=32) begin
       cnt <= cnt + 1;
       temp <= {temp[14:0],1'b1};
      end
 end 
 1: temp <= sw;  
endcase
end    
 
assign led = temp;
endmodule